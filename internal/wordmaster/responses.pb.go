// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: responses.proto

package wordmaster

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WiktionaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Words  []*BakedWiktionaryWord `protobuf:"bytes,1,rep,name=words,proto3" json:"words,omitempty"`
	Source *SourceId              `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *WiktionaryResponse) Reset() {
	*x = WiktionaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_responses_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WiktionaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WiktionaryResponse) ProtoMessage() {}

func (x *WiktionaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_responses_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WiktionaryResponse.ProtoReflect.Descriptor instead.
func (*WiktionaryResponse) Descriptor() ([]byte, []int) {
	return file_responses_proto_rawDescGZIP(), []int{0}
}

func (x *WiktionaryResponse) GetWords() []*BakedWiktionaryWord {
	if x != nil {
		return x.Words
	}
	return nil
}

func (x *WiktionaryResponse) GetSource() *SourceId {
	if x != nil {
		return x.Source
	}
	return nil
}

type BakedWiktionaryWord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Word     *WordId            `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	Contents *WordContents      `protobuf:"bytes,2,opt,name=contents,proto3,oneof" json:"contents,omitempty"`
	Senses   []*WiktionarySense `protobuf:"bytes,3,rep,name=senses,proto3" json:"senses,omitempty"`
}

func (x *BakedWiktionaryWord) Reset() {
	*x = BakedWiktionaryWord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_responses_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BakedWiktionaryWord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BakedWiktionaryWord) ProtoMessage() {}

func (x *BakedWiktionaryWord) ProtoReflect() protoreflect.Message {
	mi := &file_responses_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BakedWiktionaryWord.ProtoReflect.Descriptor instead.
func (*BakedWiktionaryWord) Descriptor() ([]byte, []int) {
	return file_responses_proto_rawDescGZIP(), []int{1}
}

func (x *BakedWiktionaryWord) GetWord() *WordId {
	if x != nil {
		return x.Word
	}
	return nil
}

func (x *BakedWiktionaryWord) GetContents() *WordContents {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *BakedWiktionaryWord) GetSenses() []*WiktionarySense {
	if x != nil {
		return x.Senses
	}
	return nil
}

type WordContents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Etymology *string  `protobuf:"bytes,3,opt,name=etymology,proto3,oneof" json:"etymology,omitempty"`
	Ipa       []*Sound `protobuf:"bytes,4,rep,name=ipa,proto3" json:"ipa,omitempty"`
	// Types that are assignable to Inflections:
	//
	//	*WordContents_SpanishVerbInflections
	Inflections isWordContents_Inflections `protobuf_oneof:"inflections"`
}

func (x *WordContents) Reset() {
	*x = WordContents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_responses_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordContents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordContents) ProtoMessage() {}

func (x *WordContents) ProtoReflect() protoreflect.Message {
	mi := &file_responses_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordContents.ProtoReflect.Descriptor instead.
func (*WordContents) Descriptor() ([]byte, []int) {
	return file_responses_proto_rawDescGZIP(), []int{2}
}

func (x *WordContents) GetEtymology() string {
	if x != nil && x.Etymology != nil {
		return *x.Etymology
	}
	return ""
}

func (x *WordContents) GetIpa() []*Sound {
	if x != nil {
		return x.Ipa
	}
	return nil
}

func (m *WordContents) GetInflections() isWordContents_Inflections {
	if m != nil {
		return m.Inflections
	}
	return nil
}

func (x *WordContents) GetSpanishVerbInflections() *SpanishVerbInflections {
	if x, ok := x.GetInflections().(*WordContents_SpanishVerbInflections); ok {
		return x.SpanishVerbInflections
	}
	return nil
}

type isWordContents_Inflections interface {
	isWordContents_Inflections()
}

type WordContents_SpanishVerbInflections struct {
	SpanishVerbInflections *SpanishVerbInflections `protobuf:"bytes,5,opt,name=spanish_verb_inflections,json=spanishVerbInflections,proto3,oneof"`
}

func (*WordContents_SpanishVerbInflections) isWordContents_Inflections() {}

type Sound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ipa  string   `protobuf:"bytes,1,opt,name=ipa,proto3" json:"ipa,omitempty"`
	Tags []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *Sound) Reset() {
	*x = Sound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_responses_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sound) ProtoMessage() {}

func (x *Sound) ProtoReflect() protoreflect.Message {
	mi := &file_responses_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sound.ProtoReflect.Descriptor instead.
func (*Sound) Descriptor() ([]byte, []int) {
	return file_responses_proto_rawDescGZIP(), []int{3}
}

func (x *Sound) GetIpa() string {
	if x != nil {
		return x.Ipa
	}
	return ""
}

func (x *Sound) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type WiktionarySense struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Examples []*WiktionaryExample `protobuf:"bytes,1,rep,name=examples,proto3" json:"examples,omitempty"`
	Glosses  []string             `protobuf:"bytes,2,rep,name=glosses,proto3" json:"glosses,omitempty"`
	Tags     []string             `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *WiktionarySense) Reset() {
	*x = WiktionarySense{}
	if protoimpl.UnsafeEnabled {
		mi := &file_responses_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WiktionarySense) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WiktionarySense) ProtoMessage() {}

func (x *WiktionarySense) ProtoReflect() protoreflect.Message {
	mi := &file_responses_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WiktionarySense.ProtoReflect.Descriptor instead.
func (*WiktionarySense) Descriptor() ([]byte, []int) {
	return file_responses_proto_rawDescGZIP(), []int{4}
}

func (x *WiktionarySense) GetExamples() []*WiktionaryExample {
	if x != nil {
		return x.Examples
	}
	return nil
}

func (x *WiktionarySense) GetGlosses() []string {
	if x != nil {
		return x.Glosses
	}
	return nil
}

func (x *WiktionarySense) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type WiktionaryExample struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string  `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Ref  *string `protobuf:"bytes,2,opt,name=ref,proto3,oneof" json:"ref,omitempty"`
	Type *string `protobuf:"bytes,3,opt,name=type,proto3,oneof" json:"type,omitempty"`
}

func (x *WiktionaryExample) Reset() {
	*x = WiktionaryExample{}
	if protoimpl.UnsafeEnabled {
		mi := &file_responses_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WiktionaryExample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WiktionaryExample) ProtoMessage() {}

func (x *WiktionaryExample) ProtoReflect() protoreflect.Message {
	mi := &file_responses_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WiktionaryExample.ProtoReflect.Descriptor instead.
func (*WiktionaryExample) Descriptor() ([]byte, []int) {
	return file_responses_proto_rawDescGZIP(), []int{5}
}

func (x *WiktionaryExample) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *WiktionaryExample) GetRef() string {
	if x != nil && x.Ref != nil {
		return *x.Ref
	}
	return ""
}

func (x *WiktionaryExample) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

var File_responses_proto protoreflect.FileDescriptor

var file_responses_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x32, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x61, 0x64, 0x72, 0x2e, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x69, 0x65,
	0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x73, 0x70, 0x61, 0x6e, 0x69, 0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xc9, 0x01, 0x0a, 0x12, 0x57, 0x69, 0x6b, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x05, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x61, 0x64, 0x72, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x61,
	0x6b, 0x65, 0x64, 0x57, 0x69, 0x6b, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x57, 0x6f, 0x72,
	0x64, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x54, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x61, 0x64, 0x72, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xb2,
	0x02, 0x0a, 0x13, 0x42, 0x61, 0x6b, 0x65, 0x64, 0x57, 0x69, 0x6b, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x72, 0x79, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x4e, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x61, 0x64, 0x72, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x49, 0x64,
	0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x61, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x61, 0x64, 0x72, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x57, 0x6f,
	0x72, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x5b, 0x0a, 0x06, 0x73, 0x65, 0x6e,
	0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x61, 0x64, 0x72, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x57,
	0x69, 0x6b, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x06,
	0x73, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0xa4, 0x02, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x09, 0x65, 0x74, 0x79, 0x6d, 0x6f, 0x6c, 0x6f, 0x67,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x65, 0x74, 0x79, 0x6d, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x03, 0x69, 0x70, 0x61, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x61, 0x64, 0x72, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52,
	0x03, 0x69, 0x70, 0x61, 0x12, 0x86, 0x01, 0x0a, 0x18, 0x73, 0x70, 0x61, 0x6e, 0x69, 0x73, 0x68,
	0x5f, 0x76, 0x65, 0x72, 0x62, 0x5f, 0x69, 0x6e, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x61,
	0x64, 0x72, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x70, 0x61,
	0x6e, 0x69, 0x73, 0x68, 0x56, 0x65, 0x72, 0x62, 0x49, 0x6e, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x16, 0x73, 0x70, 0x61, 0x6e, 0x69, 0x73, 0x68, 0x56, 0x65,
	0x72, 0x62, 0x49, 0x6e, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x0d, 0x0a,
	0x0b, 0x69, 0x6e, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x65, 0x74, 0x79, 0x6d, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x22, 0x2d, 0x0a, 0x05, 0x53, 0x6f,
	0x75, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x70, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x69, 0x70, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x0f, 0x57, 0x69,
	0x6b, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a,
	0x08, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x45, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x61, 0x64, 0x72, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73,
	0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x57, 0x69, 0x6b, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x45,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x08, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x6c, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x68,
	0x0a, 0x11, 0x57, 0x69, 0x6b, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x45, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x72, 0x65, 0x66, 0x88, 0x01, 0x01, 0x12, 0x17,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x72, 0x65, 0x66, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x67, 0x6e, 0x69, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x6d, 0x61, 0x64, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x77, 0x6f,
	0x72, 0x64, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_responses_proto_rawDescOnce sync.Once
	file_responses_proto_rawDescData = file_responses_proto_rawDesc
)

func file_responses_proto_rawDescGZIP() []byte {
	file_responses_proto_rawDescOnce.Do(func() {
		file_responses_proto_rawDescData = protoimpl.X.CompressGZIP(file_responses_proto_rawDescData)
	})
	return file_responses_proto_rawDescData
}

var file_responses_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_responses_proto_goTypes = []interface{}{
	(*WiktionaryResponse)(nil),     // 0: com.madr.external_dictionaries.mongomodel.protobuf.WiktionaryResponse
	(*BakedWiktionaryWord)(nil),    // 1: com.madr.external_dictionaries.mongomodel.protobuf.BakedWiktionaryWord
	(*WordContents)(nil),           // 2: com.madr.external_dictionaries.mongomodel.protobuf.WordContents
	(*Sound)(nil),                  // 3: com.madr.external_dictionaries.mongomodel.protobuf.Sound
	(*WiktionarySense)(nil),        // 4: com.madr.external_dictionaries.mongomodel.protobuf.WiktionarySense
	(*WiktionaryExample)(nil),      // 5: com.madr.external_dictionaries.mongomodel.protobuf.WiktionaryExample
	(*SourceId)(nil),               // 6: com.madr.external_dictionaries.mongomodel.protobuf.SourceId
	(*WordId)(nil),                 // 7: com.madr.external_dictionaries.mongomodel.protobuf.WordId
	(*SpanishVerbInflections)(nil), // 8: com.madr.external_dictionaries.mongomodel.protobuf.SpanishVerbInflections
}
var file_responses_proto_depIdxs = []int32{
	1, // 0: com.madr.external_dictionaries.mongomodel.protobuf.WiktionaryResponse.words:type_name -> com.madr.external_dictionaries.mongomodel.protobuf.BakedWiktionaryWord
	6, // 1: com.madr.external_dictionaries.mongomodel.protobuf.WiktionaryResponse.source:type_name -> com.madr.external_dictionaries.mongomodel.protobuf.SourceId
	7, // 2: com.madr.external_dictionaries.mongomodel.protobuf.BakedWiktionaryWord.word:type_name -> com.madr.external_dictionaries.mongomodel.protobuf.WordId
	2, // 3: com.madr.external_dictionaries.mongomodel.protobuf.BakedWiktionaryWord.contents:type_name -> com.madr.external_dictionaries.mongomodel.protobuf.WordContents
	4, // 4: com.madr.external_dictionaries.mongomodel.protobuf.BakedWiktionaryWord.senses:type_name -> com.madr.external_dictionaries.mongomodel.protobuf.WiktionarySense
	3, // 5: com.madr.external_dictionaries.mongomodel.protobuf.WordContents.ipa:type_name -> com.madr.external_dictionaries.mongomodel.protobuf.Sound
	8, // 6: com.madr.external_dictionaries.mongomodel.protobuf.WordContents.spanish_verb_inflections:type_name -> com.madr.external_dictionaries.mongomodel.protobuf.SpanishVerbInflections
	5, // 7: com.madr.external_dictionaries.mongomodel.protobuf.WiktionarySense.examples:type_name -> com.madr.external_dictionaries.mongomodel.protobuf.WiktionaryExample
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_responses_proto_init() }
func file_responses_proto_init() {
	if File_responses_proto != nil {
		return
	}
	file_common_proto_init()
	file_spanish_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_responses_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WiktionaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_responses_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BakedWiktionaryWord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_responses_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordContents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_responses_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_responses_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WiktionarySense); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_responses_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WiktionaryExample); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_responses_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_responses_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*WordContents_SpanishVerbInflections)(nil),
	}
	file_responses_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_responses_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_responses_proto_goTypes,
		DependencyIndexes: file_responses_proto_depIdxs,
		MessageInfos:      file_responses_proto_msgTypes,
	}.Build()
	File_responses_proto = out.File
	file_responses_proto_rawDesc = nil
	file_responses_proto_goTypes = nil
	file_responses_proto_depIdxs = nil
}
